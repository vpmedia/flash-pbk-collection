module_fragment_program phong

    metadata
        namespace const(string, "AIF Test")
        vendor const(string, "Adobe")
        version const(int, 1)
    end_metadata
    
    transformations
        SCF INTOSSA OPT(DCE* {APR DCE*}*)
    end_transformations
    
    globals
        global parameter float-4 cameraPosition
            metadata
                id const(string, "cameraPosition")
            end_metadata
        input image image-4 inputImage
        global parameter float-4 lightPosition
        global parameter float scalea
        input vertex float-4 UVCoord
            metadata
                id const(string, "PB3D_UV")
            end_metadata
        input vertex float-4 vertexColor
            metadata
                id const(string, "PB3D_COLOR")
            end_metadata
        input vertex float-4 vertexNormal
            metadata
                id const(string, "PB3D_NORMAL")
            end_metadata
        input vertex float-4 vertexPosition
            metadata
                id const(string, "PB3D_POSITION")
            end_metadata
        interpolated float-4 color
            metadata
                id const(string, "_3_color")
            end_metadata
        interpolated float-4 eyeVec
            metadata
                id const(string, "_2_eyeVec")
            end_metadata
        interpolated float-4 interpolatedCoord
            metadata
                id const(string, "_4_interpolatedCoord")
            end_metadata
        interpolated float-4 lightDir
            metadata
                id const(string, "_1_lightDir")
            end_metadata
        interpolated float-4 normal
            metadata
                id const(string, "_0_normal")
            end_metadata
        output fragment float-4 result
    end_globals
    
    functions
        external_function void evaluateFragment()
            body
                basic_block entry%A !! outlets(basic%A)
                    color1-0 = allocNonSSA type(float-4) : float-4
                    cameraPositionTemp-0 = allocNonSSA type(float-4) : float-4
                    viewDirection-0 = allocNonSSA type(float-4) : float-4
                    lightDirTemp-0 = allocNonSSA type(float-4) : float-4
                    lambertTerm-0 = allocNonSSA type(float) : float
                    R-0 = allocNonSSA type(float-4) : float-4
                    specular-0 = allocNonSSA type(float) : float
                    jump block(basic%A) : void
                end_basic_block
                basic_block basic%A !! inlets(entry%A) outlets(exit%A)
                    interpolatedCoordElem%A-0 = extractVE interpolatedCoord, const(int, 0) : float
                    interpolatedCoordElem%B-0 = extractVE interpolatedCoord, const(int, 1) : float
                    _anonVec%A-0 = makeFloatVector interpolatedCoordElem%A-0, interpolatedCoordElem%B-0 : float-2
                    _LD_color1-1 = sample inputImage, _anonVec%A-0, const(_sample_option, nearest mipdisable clamp 2D ) : float-4
                    _LD_result-1 = assign const(float-4, (0, 0, 0, 0)) : float-4
                    _LD_cameraPositionTemp-1 = assign cameraPosition : float-4
                    _LD_viewDirection-1 = sub eyeVec, _LD_cameraPositionTemp-1 : float-4
                    _LD_viewDirection-2 = normalize _LD_viewDirection-1 : float-4
                    _LD_lightDirTemp-1 = assign lightDir : float-4
                    _LD_lambertTerm-1 = dot normal, _LD_lightDirTemp-1 : float
                    _LD_lambertTerm-2 = abs _LD_lambertTerm-1 : float
                    _mulResult%A-0 = mul _LD_color1-1, _LD_lambertTerm-2 : float-4
                    _LD_result-2 = add _LD_result-1, _mulResult%A-0 : float-4
                    _dotResult%B-0 = dot normal, _LD_lightDirTemp-1 : float
                    _mulResult%B-0 = mul const(float, 2), _dotResult%B-0 : float
                    _mulResult%C-0 = mul _mulResult%B-0, normal : float-4
                    _LD_R-1 = sub lightDir, _mulResult%C-0 : float-4
                    _LD_specular-1 = dot _LD_viewDirection-2, _LD_R-1 : float
                    _LD_specular-2 = abs _LD_specular-1 : float
                    _maxResult%A-0 = max _LD_specular-2, const(float, 0) : float
                    _LD_specular-3 = pow _maxResult%A-0, const(float, 35) : float
                    _mulResult%D-0 = mul _LD_result-2, _LD_specular-3 : float-4
                    _mulResult%E-0 = mul _mulResult%D-0, _LD_color1-1 : float-4
                    _LD_result-3 = add _LD_result-2, _mulResult%E-0 : float-4
                    _LD_result-4 = insertVE const(float, 1), _LD_result-3, const(int, 3) : float-4
                    jump block(exit%A) : void
                end_basic_block
                basic_block exit%A !! inlets(basic%A)
                    moveToNonSSA _LD_result-4, result : void
                    ret : void
                end_basic_block
            end_body
        end_external_function
    end_functions
    
end_module_fragment_program

